openapi: 3.0.0
info:
  title: Blog API
  version: 1.0.0
  description: A simple blog API for creating, retrieving, updating, and deleting blogs, as well as user management.
servers:
  - url: http://localhost:8080/api
paths:
  /blog:
    get:
      summary: Retrieve blogs for a user
      parameters:
        - name: username
          in: query
          required: true
          description: The username of the user.
          schema:
            type: string
        - name: password
          in: query
          required: true
          description: The password of the user.
          schema:
            type: string
      responses:
        '200':
          description: A list of blogs for the user.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    text:
                      type: string
                    date:
                      type: string
        '404':
          description: User not found.

    post:
      summary: Create a new blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                date:
                  type: string
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Blog created successfully.
        '404':
          description: User not found.

  /blog/{id}:
    get:
      summary: Retrieve a specific blog by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the blog.
          schema:
            type: string
      responses:
        '200':
          description: The requested blog.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  text:
                    type: string
                  date:
                    type: string
        '404':
          description: Blog not found.

    delete:
      summary: Delete a specific blog by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the blog.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Blog deleted successfully.
        '404':
          description: Blog not found.
        '403':
          description: Not allowed to delete this blog.

    patch:
      summary: Update a specific blog by ID
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the blog.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                date:
                  type: string
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Blog updated successfully.
        '404':
          description: Blog not found.
        '403':
          description: Not allowed to update this blog.

  /user:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: User created successfully.

  /access/{id}:
    post:
      summary: Add access to a blog for a user
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the blog.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                adduser:
                  type: string
      responses:
        '200':
          description: Access added successfully.
        '404':
          description: Blog or user not found.
        '403':
          description: Trying to add access to blog that isn't yours.

    delete:
      summary: Remove access from a blog for a user
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the blog.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                removeuser:
                  type: string
      responses:
        '200':
          description: Access removed successfully.
        '404':
          description: Blog or user not found.
        '403':
          description: Trying to remove access to blog that isn't yours.

components:
  schemas:
    Blog:
      type: object
      properties:
        id:
          type: string
        text:
          type: string
        date:
          type: string
    User:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
